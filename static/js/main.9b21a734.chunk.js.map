{"version":3,"sources":["components/TodoInsert.js","components/TodoListItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","index.js"],"names":["TodoInsert","onInsert","useState","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","className","type","placeholder","TodoListItem","todos","onRemove","onToggle","id","text","checked","cn","onClick","TodoList","map","todo","TodoTemplate","children","App","setTodos","nextId","useRef","current","chekced","concat","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAwCeA,EApCI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACTC,mBAAS,IADA,mBAC5BC,EAD4B,KACrBC,EADqB,KAG7BC,EAAWC,uBAAa,SAAAC,GAC5BH,EAASG,EAAEC,OAAOL,SACjB,IAKGM,EAAWH,uBACf,SAAAC,GACEA,EAAEG,iBACFT,EAASE,GACTC,EAAS,MAEX,CAACH,EAAUE,IAGb,OACE,8BACE,uBAAMQ,UAAU,aAAaF,SAAWA,EAAxC,UACE,uBACEG,KAAK,OACLC,YAAY,sDACZV,MAAQA,EACRE,SAAWA,IAEb,wBAAQO,KAAK,SAAb,SACE,cAAC,IAAD,Y,8BCVKE,EAnBM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACjCC,EAAsBH,EAAtBG,GAAIC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAEhB,OACE,sBAAKT,UAAU,eAAf,UACE,sBAAKA,UAAWU,IAAG,WAAY,CAAED,YAAYE,QAAS,kBAAML,EAASC,IAArE,UACGE,EAAS,cAAC,IAAD,IAAiB,cAAC,IAAD,IAC3B,qBAAKT,UAAU,OAAf,SAAwBQ,OAE1B,qBACER,UAAU,SACVW,QAAS,kBAAMN,EAASE,IAF1B,SAIE,cAAC,IAAD,UCGOK,EAjBE,SAAC,GAAmC,IAAjCR,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnC,OACE,8BACI,qBAAKN,UAAU,WAAf,SACII,EAAMS,KAAI,SAAAC,GAAI,OACd,cAAC,EAAD,CACEV,MAAOU,EACPT,SAAWA,EACXC,SAAWA,GACNQ,EAAKP,YCMTQ,G,MAfM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACE,8BACE,sBAAKhB,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,uCAGA,qBAAKA,UAAU,UAAf,SACIgB,WC4DGC,MAjEf,WAAgB,IAAD,EACa1B,mBAAS,CACjC,CACEgB,GAAI,EACJC,KAAM,2FACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,+CACNC,SAAS,GAEX,CACEF,GAAI,EACJC,KAAM,mFACNC,SAAS,KAfA,mBACNL,EADM,KACCc,EADD,KAoBPC,EAASC,iBAAO,GAChB9B,EAAWK,uBACf,SAAAa,GACE,IAAMM,EAAO,CACXP,GAAIY,EAAOE,QACXb,OACAc,SAAS,GAEXJ,EAASd,EAAMmB,OAAOT,IACtBK,EAAOE,SAAW,IAEpB,CAACjB,IAIGC,EAAWV,uBACf,SAAAY,GACEW,EAASd,EAAMoB,QAAO,SAAAV,GAAI,OAAIA,EAAKP,KAAOA,QAE5C,CAACH,IAIGE,EAAWX,uBACf,SAAAY,GACEW,EAEEd,EAAMS,KAAI,SAAAC,GAAI,OACZA,EAAKP,KAAOA,EAAZ,2BAAqBO,GAArB,IAA2BL,SAAUK,EAAKL,UAAYK,QAI5D,CAACV,IAGH,OACE,qBAAKJ,UAAU,MAAf,SACI,eAAC,EAAD,WACE,cAAC,EAAD,CAAYV,SAAWA,IACvB,cAAC,EAAD,CAAUc,MAAQA,EAAQC,SAAWA,EAAWC,SAAWA,UC5DrEmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9b21a734.chunk.js","sourcesContent":["import {useState, useCallback} from 'react';\r\nimport './TodoInsert.scss';\r\nimport { MdAdd } from 'react-icons/md';\r\n\r\nconst TodoInsert = ({ onInsert }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const onChange = useCallback( e => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  // useCallback(생성하고 싶은 함수, [베열])\r\n  // 이 배열에는, 어떤 값이 바뀌었을 때 함수를 새로 생성해야 하는지 명시\r\n  // onInsert와 value가 바뀌었을 때만 함수 생성\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      onInsert(value);\r\n      setValue(''); //value 값 초기화\r\n    },\r\n    [onInsert, value],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"TodoInsert\" onSubmit={ onSubmit }>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"할 일을 입력하세요.\"\r\n          value={ value }\r\n          onChange={ onChange }\r\n        />\r\n        <button type=\"submit\">\r\n          <MdAdd />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoInsert\r\n","import './TodoListItem.scss';\r\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdRemoveCircleOutline } from 'react-icons/md';\r\nimport cn from 'classnames';\r\n\r\nconst TodoListItem = ({ todos, onRemove, onToggle }) => {\r\nconst { id, text, checked } = todos;\r\n\r\n  return (\r\n    <div className=\"TodoListItem\">\r\n      <div className={cn('checkbox', { checked })} onClick={() => onToggle(id)}>\r\n        {checked? <MdCheckBox /> : <MdCheckBoxOutlineBlank/>}\r\n        <div className=\"text\">{ text }</div>\r\n      </div>\r\n      <div \r\n        className=\"remove\" \r\n        onClick={() => onRemove(id)}\r\n      >\r\n        <MdRemoveCircleOutline />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoListItem\r\n","import './TodoList.scss';\r\nimport TodoListItem from './TodoListItem';\r\n\r\nconst TodoList = ({ todos, onRemove, onToggle }) => {\r\n  return (\r\n    <div>\r\n        <div className=\"TodoList\">\r\n          { todos.map(todo => (\r\n            <TodoListItem \r\n              todos={todo} \r\n              onRemove={ onRemove } \r\n              onToggle={ onToggle } \r\n              key={todo.id} \r\n            />\r\n          )) }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import './TodoTemplate.scss';\r\n\r\n\r\nconst TodoTemplate = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"TodoTemplate\">\r\n        <div className=\"app-title\">\r\n          일정 관리\r\n        </div>\r\n        <div className=\"content\">\r\n          { children }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoTemplate\r\n","import './App.css';\nimport { useState, useCallback, useRef } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '오징어에 버터 듬뿍 발라 구워먹기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '쿠키런:킹덤 하기',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '윙가르디움 레비오사 연습하기',\n      checked: false,\n    },\n  ]);\n\n  // 새로운 TODO 만들기\n  const nextId = useRef(4);  \n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        chekced: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos]\n  );\n\n  // 지우기\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos]\n  );\n\n  // 수정하기\n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        //map을 사용해서 특정 id를 갖고 있는 객체의 checked 값을 반전시켜 주기\n        todos.map(todo =>\n          todo.id === id ? {...todo, checked: !todo.checked } : todo\n        )\n      )\n    },\n    [todos]\n  );\n\n  return (\n    <div className=\"App\">\n        <TodoTemplate>\n          <TodoInsert onInsert={ onInsert } />\n          <TodoList todos={ todos } onRemove={ onRemove } onToggle={ onToggle } />\n        </TodoTemplate>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}